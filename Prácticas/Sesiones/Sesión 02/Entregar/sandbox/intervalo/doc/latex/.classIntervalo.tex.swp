\hypertarget{classIntervalo}{}\section{Referencia de la Clase Intervalo}
\label{classIntervalo}\index{Intervalo@{Intervalo}}
\subsection*{Métodos públicos}
\begin{DoxyCompactItemize}
\item 
\hyperlink{classIntervalo_a9b5b23dda7ee26b444898457959cb03d}{Intervalo} ()\hypertarget{classIntervalo_a9b5b23dda7ee26b444898457959cb03d}{}\label{classIntervalo_a9b5b23dda7ee26b444898457959cb03d}

\begin{DoxyCompactList}\small\item\em Crea un intervalo vacio. \end{DoxyCompactList}\item 
\hyperlink{classIntervalo_a321e56ef7e1f4a774bd64cc2609156f4}{Intervalo} (double cota\+Inferior, double cota\+Superior)
\begin{DoxyCompactList}\small\item\em Crea un \hyperlink{classIntervalo}{Intervalo} cerrado. \end{DoxyCompactList}\item 
\hyperlink{classIntervalo_af70d523399465f51862977a303656c72}{Intervalo} (double cota\+Inferior, double cota\+Superior, bool cerrado\+Inferior, bool cerrado\+Superior)
\begin{DoxyCompactList}\small\item\em Crea un intervalo cualquiera. \end{DoxyCompactList}\item 
double \hyperlink{classIntervalo_af8170b68c6d6a63192db6685b90f782f}{get\+Cota\+Inf} () const 
\begin{DoxyCompactList}\small\item\em Devuelve la cota inferior del intervalo. \end{DoxyCompactList}\item 
double \hyperlink{classIntervalo_a7f8ff94ce16f90a81a3c55f36044893b}{get\+Cota\+Sup} () const 
\begin{DoxyCompactList}\small\item\em Devuelve la cota superior del intervalo. \end{DoxyCompactList}\item 
bool \hyperlink{classIntervalo_a6737cfbda201a3a6e11a716d2568d322}{es\+Cerrado\+Inf} () const 
\begin{DoxyCompactList}\small\item\em Consulta si el intervalo es cerrado en su cota inferior. \end{DoxyCompactList}\item 
bool \hyperlink{classIntervalo_ad0c5573ee88ffbfda8f78454b78d91a6}{es\+Cerrado\+Sup} () const 
\begin{DoxyCompactList}\small\item\em Consulta si el intervalo es cerrado en su cota superior. \end{DoxyCompactList}\item 
bool \hyperlink{classIntervalo_ab53adad27de8ec98cf8f4280bd3a7df9}{es\+Vacio} () const 
\begin{DoxyCompactList}\small\item\em Consulta si el intervalo almacenado es vacío o no. \end{DoxyCompactList}\item 
bool \hyperlink{classIntervalo_af55ac0bb47855ef909402e2ec76cda5b}{esta\+Dentro} (double n) const 
\begin{DoxyCompactList}\small\item\em Consulta si un determinado valor está dentro del intervalo. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Amigas}
\begin{DoxyCompactItemize}
\item 
\hyperlink{classIntervalo}{Intervalo} \hyperlink{classIntervalo_a41f5fd8dad22e4ff922440cba788c5f1}{interseccion} (const \hyperlink{classIntervalo}{Intervalo} \&i1, const \hyperlink{classIntervalo}{Intervalo} \&i2)
\begin{DoxyCompactList}\small\item\em Realiza la intersección de dos intervalos, puede resultar un intervalo vacío en caso de que no tengan cotas comunes, en caso contrario se revisan las cotas. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Descripción detallada}


Definición en la línea 10 del archivo intervalo.\+h.



\subsection{Documentación del constructor y destructor}
\index{Intervalo@{Intervalo}!Intervalo@{Intervalo}}
\index{Intervalo@{Intervalo}!Intervalo@{Intervalo}}
\subsubsection[{\texorpdfstring{Intervalo(double cota\+Inferior, double cota\+Superior)}{Intervalo(double cotaInferior, double cotaSuperior)}}]{\setlength{\rightskip}{0pt plus 5cm}Intervalo\+::\+Intervalo (
\begin{DoxyParamCaption}
\item[{double}]{cota\+Inferior, }
\item[{double}]{cota\+Superior}
\end{DoxyParamCaption}
)}\hypertarget{classIntervalo_a321e56ef7e1f4a774bd64cc2609156f4}{}\label{classIntervalo_a321e56ef7e1f4a774bd64cc2609156f4}


Crea un \hyperlink{classIntervalo}{Intervalo} cerrado. 


\begin{DoxyParams}{Parámetros}
{\em cota\+Inferior} & \\
\hline
{\em cota\+Superior} & \\
\hline
\end{DoxyParams}
\begin{DoxyPrecond}{Precondición}
El intervalo es válido 
\end{DoxyPrecond}


Definición en la línea 23 del archivo intervalo.\+cpp.


\begin{DoxyCode}
23                                                              \{
24     assert (validar(cotaInferior,cotaSuperior, \textcolor{keyword}{true}, \textcolor{keyword}{true}));
25     cotaInf = cotaInferior;
26     cotaSup = cotaSuperior;
27     cerradoInf = \textcolor{keyword}{true};
28     cerradoSup = \textcolor{keyword}{true};
29 \}
\end{DoxyCode}
\index{Intervalo@{Intervalo}!Intervalo@{Intervalo}}
\index{Intervalo@{Intervalo}!Intervalo@{Intervalo}}
\subsubsection[{\texorpdfstring{Intervalo(double cota\+Inferior, double cota\+Superior, bool cerrado\+Inferior, bool cerrado\+Superior)}{Intervalo(double cotaInferior, double cotaSuperior, bool cerradoInferior, bool cerradoSuperior)}}]{\setlength{\rightskip}{0pt plus 5cm}Intervalo\+::\+Intervalo (
\begin{DoxyParamCaption}
\item[{double}]{cota\+Inferior, }
\item[{double}]{cota\+Superior, }
\item[{bool}]{cerrado\+Inferior, }
\item[{bool}]{cerrado\+Superior}
\end{DoxyParamCaption}
)}\hypertarget{classIntervalo_af70d523399465f51862977a303656c72}{}\label{classIntervalo_af70d523399465f51862977a303656c72}


Crea un intervalo cualquiera. 


\begin{DoxyParams}{Parámetros}
{\em cota\+Inferior} & \\
\hline
{\em cota\+Superior} & \\
\hline
{\em cerrado\+Inferior} & \\
\hline
{\em cerrado\+Superior} & \\
\hline
\end{DoxyParams}
\begin{DoxyPrecond}{Precondición}
El intervalo es válido 
\end{DoxyPrecond}


Definición en la línea 31 del archivo intervalo.\+cpp.


\begin{DoxyCode}
31                                                                                                          \{
32     assert (validar(cotaInferior,cotaSuperior, cerradoInferior, cerradoSuperior));
33     cotaInf = cotaInferior;
34     cotaSup = cotaSuperior;
35     cerradoInf = cerradoInferior;
36     cerradoSup = cerradoSuperior;
37 \}
\end{DoxyCode}


\subsection{Documentación de las funciones miembro}
\index{Intervalo@{Intervalo}!es\+Cerrado\+Inf@{es\+Cerrado\+Inf}}
\index{es\+Cerrado\+Inf@{es\+Cerrado\+Inf}!Intervalo@{Intervalo}}
\subsubsection[{\texorpdfstring{es\+Cerrado\+Inf() const }{esCerradoInf() const }}]{\setlength{\rightskip}{0pt plus 5cm}bool Intervalo\+::es\+Cerrado\+Inf (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const}\hypertarget{classIntervalo_a6737cfbda201a3a6e11a716d2568d322}{}\label{classIntervalo_a6737cfbda201a3a6e11a716d2568d322}


Consulta si el intervalo es cerrado en su cota inferior. 

\begin{DoxyReturn}{Devuelve}

\end{DoxyReturn}

\begin{DoxyRetVals}{Valores devueltos}
{\em true} & si es cerrado \\
\hline
{\em false} & si es cerrado \\
\hline
\end{DoxyRetVals}


Definición en la línea 47 del archivo intervalo.\+cpp.


\begin{DoxyCode}
47                                   \{
48     \textcolor{keywordflow}{return} cerradoInf;
49 \}
\end{DoxyCode}
\index{Intervalo@{Intervalo}!es\+Cerrado\+Sup@{es\+Cerrado\+Sup}}
\index{es\+Cerrado\+Sup@{es\+Cerrado\+Sup}!Intervalo@{Intervalo}}
\subsubsection[{\texorpdfstring{es\+Cerrado\+Sup() const }{esCerradoSup() const }}]{\setlength{\rightskip}{0pt plus 5cm}bool Intervalo\+::es\+Cerrado\+Sup (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const}\hypertarget{classIntervalo_ad0c5573ee88ffbfda8f78454b78d91a6}{}\label{classIntervalo_ad0c5573ee88ffbfda8f78454b78d91a6}


Consulta si el intervalo es cerrado en su cota superior. 

\begin{DoxyReturn}{Devuelve}

\end{DoxyReturn}

\begin{DoxyRetVals}{Valores devueltos}
{\em true} & si es cerrado \\
\hline
{\em false} & si es cerrado \\
\hline
\end{DoxyRetVals}


Definición en la línea 51 del archivo intervalo.\+cpp.


\begin{DoxyCode}
51                                   \{
52     \textcolor{keywordflow}{return} cerradoSup;
53 \}
\end{DoxyCode}
\index{Intervalo@{Intervalo}!esta\+Dentro@{esta\+Dentro}}
\index{esta\+Dentro@{esta\+Dentro}!Intervalo@{Intervalo}}
\subsubsection[{\texorpdfstring{esta\+Dentro(double n) const }{estaDentro(double n) const }}]{\setlength{\rightskip}{0pt plus 5cm}bool Intervalo\+::esta\+Dentro (
\begin{DoxyParamCaption}
\item[{double}]{n}
\end{DoxyParamCaption}
) const}\hypertarget{classIntervalo_af55ac0bb47855ef909402e2ec76cda5b}{}\label{classIntervalo_af55ac0bb47855ef909402e2ec76cda5b}


Consulta si un determinado valor está dentro del intervalo. 


\begin{DoxyParams}{Parámetros}
{\em n} & El valor consultado \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Devuelve}

\end{DoxyReturn}

\begin{DoxyRetVals}{Valores devueltos}
{\em true} & si el valor {\ttfamily n} pertenece al intervalo, \\
\hline
{\em false} & en otro caso \\
\hline
\end{DoxyRetVals}


Definición en la línea 59 del archivo intervalo.\+cpp.


\begin{DoxyCode}
59                                         \{
60     \textcolor{keywordflow}{if} ( cerradoInf && cerradoSup )
61         \textcolor{keywordflow}{return} n >= cotaInf && n <= cotaSup;
62     \textcolor{keywordflow}{else} \textcolor{keywordflow}{if} ( !cerradoInf && cerradoSup )
63         \textcolor{keywordflow}{return} n > cotaInf && n <= cotaSup;
64     \textcolor{keywordflow}{else} \textcolor{keywordflow}{if} ( cerradoInf && !cerradoSup )
65         \textcolor{keywordflow}{return} n >= cotaInf && n < cotaSup;
66     \textcolor{keywordflow}{else}
67         \textcolor{keywordflow}{return} n > cotaInf && n < cotaSup;
68 \}
\end{DoxyCode}
\index{Intervalo@{Intervalo}!es\+Vacio@{es\+Vacio}}
\index{es\+Vacio@{es\+Vacio}!Intervalo@{Intervalo}}
\subsubsection[{\texorpdfstring{es\+Vacio() const }{esVacio() const }}]{\setlength{\rightskip}{0pt plus 5cm}bool Intervalo\+::es\+Vacio (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const}\hypertarget{classIntervalo_ab53adad27de8ec98cf8f4280bd3a7df9}{}\label{classIntervalo_ab53adad27de8ec98cf8f4280bd3a7df9}


Consulta si el intervalo almacenado es vacío o no. 

\begin{DoxyReturn}{Devuelve}

\end{DoxyReturn}

\begin{DoxyRetVals}{Valores devueltos}
{\em true} & si es un intervalo vacío, \\
\hline
{\em false} & en otro caso \\
\hline
\end{DoxyRetVals}


Definición en la línea 55 del archivo intervalo.\+cpp.


\begin{DoxyCode}
55                              \{
56     \textcolor{keywordflow}{return} ( cotaInf == cotaSup ) && !cerradoInf && !cerradoSup;
57 \}
\end{DoxyCode}
\index{Intervalo@{Intervalo}!get\+Cota\+Inf@{get\+Cota\+Inf}}
\index{get\+Cota\+Inf@{get\+Cota\+Inf}!Intervalo@{Intervalo}}
\subsubsection[{\texorpdfstring{get\+Cota\+Inf() const }{getCotaInf() const }}]{\setlength{\rightskip}{0pt plus 5cm}double Intervalo\+::get\+Cota\+Inf (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const}\hypertarget{classIntervalo_af8170b68c6d6a63192db6685b90f782f}{}\label{classIntervalo_af8170b68c6d6a63192db6685b90f782f}


Devuelve la cota inferior del intervalo. 

\begin{DoxyReturn}{Devuelve}
El valor de la cota 
\end{DoxyReturn}


Definición en la línea 39 del archivo intervalo.\+cpp.


\begin{DoxyCode}
39                                   \{
40     \textcolor{keywordflow}{return} cotaInf;
41 \}
\end{DoxyCode}
\index{Intervalo@{Intervalo}!get\+Cota\+Sup@{get\+Cota\+Sup}}
\index{get\+Cota\+Sup@{get\+Cota\+Sup}!Intervalo@{Intervalo}}
\subsubsection[{\texorpdfstring{get\+Cota\+Sup() const }{getCotaSup() const }}]{\setlength{\rightskip}{0pt plus 5cm}double Intervalo\+::get\+Cota\+Sup (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
) const}\hypertarget{classIntervalo_a7f8ff94ce16f90a81a3c55f36044893b}{}\label{classIntervalo_a7f8ff94ce16f90a81a3c55f36044893b}


Devuelve la cota superior del intervalo. 

\begin{DoxyReturn}{Devuelve}
El valor de la cota 
\end{DoxyReturn}


Definición en la línea 43 del archivo intervalo.\+cpp.


\begin{DoxyCode}
43                                   \{
44     \textcolor{keywordflow}{return} cotaSup;
45 \}
\end{DoxyCode}


\subsection{Documentación de las funciones relacionadas y clases amigas}
\index{Intervalo@{Intervalo}!interseccion@{interseccion}}
\index{interseccion@{interseccion}!Intervalo@{Intervalo}}
\subsubsection[{\texorpdfstring{interseccion}{interseccion}}]{\setlength{\rightskip}{0pt plus 5cm}{\bf Intervalo} interseccion (
\begin{DoxyParamCaption}
\item[{const {\bf Intervalo} \&}]{i1, }
\item[{const {\bf Intervalo} \&}]{i2}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [friend]}}\hypertarget{classIntervalo_a41f5fd8dad22e4ff922440cba788c5f1}{}\label{classIntervalo_a41f5fd8dad22e4ff922440cba788c5f1}


Realiza la intersección de dos intervalos, puede resultar un intervalo vacío en caso de que no tengan cotas comunes, en caso contrario se revisan las cotas. 


\begin{DoxyParams}{Parámetros}
{\em i1} & primer intervalo de entrada \\
\hline
{\em i2} & segundo intervalo de entrada \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Devuelve}
devuelve el intervalo resultante de realizar la intersección entre los dos intervalos de entrada 
\end{DoxyReturn}


Definición en la línea 70 del archivo intervalo.\+cpp.


\begin{DoxyCode}
70                                                                    \{
71     \hyperlink{classIntervalo}{Intervalo} \hyperlink{classIntervalo_a41f5fd8dad22e4ff922440cba788c5f1}{interseccion};
72     \textcolor{keywordflow}{if} ( i1.cotaInf == i2.cotaInf ) \{
73         interseccion.cotaInf = i1.cotaInf;
74         interseccion.cerradoInf = i1.cerradoInf && i2.cerradoInf;
75     \} \textcolor{keywordflow}{else} \textcolor{keywordflow}{if} ( i1.cotaInf > i2.cotaInf ) \{
76         interseccion.cotaInf = i1.cotaInf;
77         interseccion.cerradoInf = i1.cerradoInf;
78     \} \textcolor{keywordflow}{else} \{
79         interseccion.cotaInf = i2.cotaInf;
80         interseccion.cerradoInf = i2.cerradoInf;
81     \}
82     
83     \textcolor{keywordflow}{if} ( i1.cotaSup == i2.cotaSup ) \{
84         interseccion.cotaSup = i1.cotaSup;
85         interseccion.cerradoSup = i1.cerradoSup && i2.cerradoSup;
86     \} \textcolor{keywordflow}{else} \textcolor{keywordflow}{if} ( i1.cotaSup < i2.cotaSup ) \{
87         interseccion.cotaSup = i1.cotaSup;
88         interseccion.cerradoSup = i1.cerradoSup;
89     \} \textcolor{keywordflow}{else} \{
90         interseccion.cotaSup = i2.cotaSup;
91         interseccion.cerradoSup = i2.cerradoSup;
92     \}
93 
94     \textcolor{keywordflow}{if} ( !interseccion.validar(interseccion.cotaInf, interseccion.cotaSup, interseccion.cerradoInf, 
      interseccion.cerradoSup) ) \{
95         interseccion.cotaSup = 0;
96         interseccion.cotaInf = 0;
97         interseccion.cerradoSup = \textcolor{keyword}{false};
98         interseccion.cerradoInf = \textcolor{keyword}{false};
99     \}
100 
101     \textcolor{keywordflow}{return} \hyperlink{classIntervalo_a41f5fd8dad22e4ff922440cba788c5f1}{interseccion};
102 \}
\end{DoxyCode}


La documentación para esta clase fue generada a partir de los siguientes ficheros\+:\begin{DoxyCompactItemize}
\item 
include/\hyperlink{intervalo_8h}{intervalo.\+h}\item 
src/\hyperlink{intervalo_8cpp}{intervalo.\+cpp}\end{DoxyCompactItemize}
